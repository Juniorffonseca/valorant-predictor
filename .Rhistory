View(predictVstest)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador, col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
# Adicionar legenda para as cores
legend("topright", legend = c("ganhador = 0", "ganhador = 1"), col = c("red", "blue"), pch = 20)
# Adicionar legenda para as cores
legend("middle", legend = c("ganhador = 0", "ganhador = 1"), col = c("red", "blue"), pch = 20)
# Adicionar legenda para as cores
legend("center", legend = c("ganhador = 0", "ganhador = 1"), col = c("red", "blue"), pch = 20)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador, col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
# Adicionar legenda para as cores
legend("center", legend = c("ganhador = 0", "ganhador = 1"), col = c("red", "blue"), pch = 20)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador, col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
# Adicionar legenda para as cores
legend("center", legend = c("time 2 ganhador = 0", "time 1 ganhador = 1"), col = c("red", "blue"), pch = 20)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador, col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
# Adicionar legenda para as cores
legend("center", legend = c("time 2 ganhador", "time 1 ganhador"), col = c("red", "blue"), pch = 20)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador, col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
# Adicionar legenda para as cores
legend("center", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
abline(v = 0.5, lty = 2, col = "gray")
abline(v = 0.5, lty = 2, col = "black")
# Adicionar legenda para as cores
legend("center right", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
# Adicionar legenda para as cores
legend("right", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador, col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
xlim = c(0,1))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
abline(v = 0.5, lty = 2, col = "black")
abline(v = 0.5, lty = 2, col = "red")
abline(v = 0.5, lty = 2, col = "green")
abline(v = 0.5, lty = 2, col = "gray")
abline(v = 0.5, lty = 2, col = "black")
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 30)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 19)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 20)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 18)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 15)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 1)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
xlim = c(0,1), xlab = "Predict$net.result", ylab = "ganhador")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
xlim = c(0,1), xlab = "Ganhador", ylab = "Porcentagem")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
ylim = 0,
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
ylim = c(0,1),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador")
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"))
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "blue", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador")
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "blue"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador")
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.5, pch = 21)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.5, pch = 1)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.5, pch = 5)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.5, pch = 13)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 3, pch = 13)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 13)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 14)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 15)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 16)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 17)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 18)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1.3, pch = 19)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, at = NULL)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, axis(side = 2, at = NULL))
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19)
axis(side = 2, at = NULL)
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
axis(side = 2, at = NULL, tck = -0.01)
axis(side = 2, at = NULL, tck = 0, line = -1, tick = FALSE)
axis(side = 2, at = NULL, tck = 0, line = -1, tick = T)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19)
axis(side = 2, at = NULL, tck = 0, line = -1, tick = F)
axis(side = 2, at = NULL, tck = 0, line = -1, labels = F)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19)
axis(side = 2, at = NULL, tck = 0, line = -1, labels = F)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19)
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0, line = -1)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0, line = -1)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n', mgp = c(3, 1, 0))
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0, line = -1)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0, line = -2)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0, line = 0)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"))
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"), tck = 0)
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
#Plot distribuição
histogram(predictVstest$`Predict$net.result`, breaks = 98,
col = ifelse(as.factor(predictVstest$ganhador) == 1, "blue", "red"))
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(-0.1,1.1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0.05,0.95), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
ggplot(df, aes(x = predictVstest$`Predict$net.result`, y = predictVstest$ganhador, color = col)) +
geom_point(size = 3) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
ggplot(predictVstest, aes(x = 'Predict$net.result', y = 'ganhador', color = col)) +
geom_point(size = 3) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
ggplot(predictVstest, aes(x = 'Predict$net.result', y = 'ganhador',
color = ifelse(predictVstest$ganhador == 1, "ganhador = 1", "ganhador = 0"))) +
geom_point(size = 3) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
ggplot(predictVstest, aes(x = 'Predict$net.result', y = 'ganhador',
color = ifelse(predictVstest$ganhador == 1, "ganhador = 1", "ganhador = 0"))) +
geom_point(size = 1) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
ggplot(predictVstest, aes(x = 'Predict$net.result', y = 'ganhador',
color = ifelse(predictVstest$ganhador == 1, "ganhador = 1", "ganhador = 0"))) +
geom_point(size = 3) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("Ganhador") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
color = 'ganhador') +
ggplot(predictVstest, aes(x = 'Predict$net.result', y = 'ganhador',
color = 'ganhador')) +
geom_point(size = 3) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("Ganhador") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
ggplot(predictVstest, aes(x = 'Predict$net.result', y = 'ganhador',
color = factor('ganhador'))) +
geom_point(size = 3) +
scale_color_manual(values = c("ganhador = 0" = "red", "ganhador = 1" = "blue")) +
xlab("Predict$net.result") +
ylab("Ganhador") +
theme_classic() +
theme(axis.text.y = element_text(size = 16)) +
guides(color = guide_legend(title = "Ganhador", ncol = 1))
plot(predictVstest$`Predict$net.result`, predictVstest$ganhador,
col = ifelse(predictVstest$ganhador == 1, "green", "red"),
xlim = c(0,1), xlab = "Porcentagem", ylab = "Ganhador",
cex = 1, pch = 19, yaxt = 'n')
axis(side = 2, at = c(0, 1), labels = c("0", "1"))
# Adicionar legenda para as cores
legend("left", legend = c("Time 2 ganhador", "Time 1 ganhador"), col = c("red", "green"), pch = 1)
abline(v = 0.5, lty = 2, col = "black")
library(plotly)
plot_ly(data = predictVstest, x = ~Predict$net.result, y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50))
View(predictVstest)
plot_ly(data = predictVstest, x = ~'Predict$net.result', y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50))
plot_ly(data = predictVstest, x = '~Predict$net.result', y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50))
rm(Predict)
plot_ly(data = predictVstest, x = ~Predict$net.result, y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50))
plot_ly(data = predictVstest, x = ~`Predict$net.result`, y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50))
plot_ly(data = predictVstest, x = ~`Predict$net.result`, y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50),
shapes = list(list(type = "line", x0 = 0.5, x1 = 0.5, y0 = 0, y1 = 1,
line = list(color = "black", width = 2))))
plot_ly(data = predictVstest, x = ~`Predict$net.result`, y = ~ganhador,
color = ~factor(ganhador), colors = c("red", "green"), type = "scatter",
mode = "markers", marker = list(size = 10)) %>%
layout(xaxis = list(title = "Porcentagem"), yaxis = list(title = "Ganhador"),
legend = list(title = "Ganhador", font = list(size = 16)),
margin = list(l = 50, r = 50, t = 50, b = 50),
shapes = list(list(type = "line", x0 = 0.5, x1 = 0.5, y0 = 0, y1 = 1,
line = list(color = "gray", width = 2))))
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
library(devtools)
install_github("Juniorffonseca/r-pacote-valorant")
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(nnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(plotly)
library(valorant)
url <- 'https://www.vlr.gg/169012/turtle-troop-vs-oxygen-esports-challengers-league-north-america-w5'
nomes_times <- read_html(url) %>%
html_nodes('wf-title-med') %>%
html_text()
nomes_times <- read_html(url) %>%
html_nodes('div.wf-title-med') %>%
html_text()
nomes_times
nomes_times <- read_html(url) %>%
html_nodes('div.wf-title-med') %>%
html_text() %>% str_replace_all('\n', '') %>% str_replace_all('\t', '')
nomes_times
previsao <- c(70.5, 29.5)
previsao <- nomes_times + previsao
previsao <- paste(nomes_times, previsao, sep = ' ')
previsao
detach("package:valorant", unload = TRUE)
previsao <- paste(nomes_times, previsao, ' ')
?paste0
?paste
install_github("Juniorffonseca/r-pacote-valorant")
library(valorant)
detach("package:valorant", unload = TRUE)
install_github("Juniorffonseca/r-pacote-valorant")
install_github("Juniorffonseca/r-pacote-valorant", force= T)
---
runtime: shiny
setCurrentTheme()
library(bslib)
# Carregando pacotes
library(devtools)
#install_github("Juniorffonseca/r-pacote-valorant")
library(shiny)
library(shinythemes)
library(bslib)
library(dplyr)
library(tidyr)
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(reshape2)
library(data.table)
library(readr)
library(ggplot2)
library(DT)
library(valorant)
library(purrr)
setCurrentTheme()
library(bslib)
first_bs5_theme <- bs_theme(
version = 5
)
first_bs5_theme
first_bs5_theme
bs_theme_preview(theme = first_bs5_theme, with_themer = FALSE)
custom_theme <- bs_theme(
version = 5,
bg = "black",
fg = "red",
primary = "#0199F8",
secondary = "#FF374B",
base_font = "Maven Pro"
)
bs_theme_preview(custom_theme)
bs_theme_update(theme, bootswatch = "vapor")
custom_theme <- bs_theme_update(theme, bootswatch = "vapor")
custom_theme <- bs_theme_update(custom_theme, bootswatch = "vapor")
bs_theme_preview(custom_theme)
custom_theme <- bs_theme_update(custom_theme, bootswatch = "vapor")
bs_theme_preview(custom_theme)
custom_theme <- bs_theme_update(custom_theme, bootswatch = "morph")
bs_theme_preview(custom_theme)
custom_theme <- bs_theme_update(custom_theme, bootswatch = "sketchy")
bs_theme_preview(custom_theme)
custom_theme <- bs_theme_update(custom_theme, bootswatch = "journal")
custom_theme <- bs_theme(
version = 5,
primary = "#0199F8",
secondary = "#FF374B",
base_font = "Maven Pro"
)
custom_theme <- bs_theme_update(custom_theme, bootswatch = "journal")
custom_theme <- bs_theme(
version = 5,
primary = "#0199F8",
secondary = "#FF374B",
base_font = "Maven Pro"
)
custom_theme <- bs_theme_update(custom_theme, bootswatch = "journal")
?bs_theme
bs_theme_preview(custom_theme)
bs_theme_preview(bs_theme)
bs_theme_preview(theme)
# Define UI
tema <- bs_theme(version = 5, base_font = font_google('Yanone Kaffeesatz'), font_scale = 1.2)
bs_theme_preview(tema)
bs_theme_preview(tema)
