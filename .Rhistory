outras_partidas <- read.csv2('csv/partidas_2.csv') %>% dplyr::select(-X, -ganhador)
jogos_scale <- rbind(jogos, outras_partidas)
jogos_scale <- scale(jogos_scale)
partidas <- jogos_scale[-1:-nrow(jogos),]
partidas <- as.data.frame(partidas)
previsao <- compute(n, partidas)
previsao <- previsao$net.result
partidas_reversas <- partidas
partidas_reversas$time1R <- partidas$time2R
partidas_reversas$time2R <- partidas$time1R
partidas_reversas$time1ACS <- partidas$time2ACS
partidas_reversas$time2ACS <- partidas$time1ACS
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
a <- read.csv2('csv/urls_2')
a <- read.csv2('csv/urls_2.csv') %>% select(-X)
a <- unlist(a)
m <- 1
dff <- list()
for (i in a){
tryCatch({
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
library(valorant)
for (i in a){
tryCatch({
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
dff <- dff %>% map_df(as_tibble)
write.csv2(dff, 'csv/partidas_2_teste.csv') #apenas de janeiro 2023 em diante
load(file = 'rede_neural_teste.rda')
jogos <- read.csv2('csv/partidas.csv') %>% dplyr::select(-X, -ganhador)
outras_partidas <- read.csv2('csv/partidas_2_teste.csv') %>% dplyr::select(-X, -ganhador)
jogos_scale <- rbind(jogos, outras_partidas)
jogos_scale <- scale(jogos_scale)
partidas <- jogos_scale[-1:-nrow(jogos),]
partidas <- as.data.frame(partidas)
previsao <- compute(n, partidas)
previsao <- previsao$net.result
partidas_reversas <- partidas
partidas_reversas$time1R <- partidas$time2R
jogos <- read.csv2('csv/partidas.csv') %>% dplyr::select(-X, -ganhador)
outras_partidas <- read.csv2('csv/partidas_2_teste.csv') %>% dplyr::select(-X, -ganhador)
jogos_scale <- rbind(jogos, outras_partidas)
jogos <- read.csv2('csv/partidas_teste.csv') %>% dplyr::select(-X, -ganhador)
outras_partidas <- read.csv2('csv/partidas_2_teste.csv') %>% dplyr::select(-X, -ganhador)
jogos_scale <- rbind(jogos, outras_partidas)
jogos_scale <- scale(jogos_scale)
partidas <- jogos_scale[-1:-nrow(jogos),]
partidas <- as.data.frame(partidas)
previsao <- compute(n, partidas)
previsao <- previsao$net.result
partidas_reversas <- partidas
partidas_reversas$time1R <- partidas$time2R
partidas_reversas$time2R <- partidas$time1R
partidas_reversas$time1ACS <- partidas$time2ACS
partidas_reversas$time2ACS <- partidas$time1ACS
partidas_reversas$time1KAST <- partidas$time2KAST
partidas_reversas$time2KAST <- partidas$time1KAST
partidas_reversas$time1KD <- partidas$time2KD
partidas_reversas$time2KD <- partidas$time1KD
partidas_reversas$time1ADR <- partidas$time2ADR
partidas_reversas$time2ADR <- partidas$time1ADR
previsao2 <- compute(n, partidas_reversas)
previsao2 <- previsao2$net.result
previsoes <- cbind(previsao, previsao2)
transforma_positivo <- function (x){
y = atan(x) + pi/2
return (y)
}
transforma_probabilidade <- function (y, x){
z = y / (y + x)
w = x / (x + y)
c = as.matrix(c(z,w))
return(c)
}
a <- transforma_positivo(previsao)
b <- transforma_positivo(previsao2)
previsao <- transforma_probabilidade(a,b)
previsao <- previsao * 100
previsao2 <- previsao[((length(previsao)/2)+1):length(previsao)]
previsao <- previsao[1:(length(previsao)/2)]
previsao <- cbind(previsao, previsao2)
ganhadores <- read.csv2('csv/partidas_2.csv') %>% dplyr::select(ganhador)
ganhadores <- read.csv2('csv/partidas_2_teste.csv') %>% dplyr::select(ganhador)
previsao <- cbind(previsao, ganhadores)
colnames(previsao) <- c('previsao1', 'previsao2', 'ganhador')
previsao <- previsao %>%
mutate(ganhador = as.factor(ganhador))
# Plot
ggplot(data = previsao, mapping = aes(x = previsao1, y = previsao2, colour = ganhador)) +
geom_tile(aes(fill = ganhador)) +
geom_point() +
theme_bw()
resultados <- dplyr::select(previsao, ganhador)
resultadovspredict <- cbind(partidas, previsao)
resultadovspredict$previsoes <-  ifelse(resultadovspredict$previsao1>resultadovspredict$previsao2,
1,
0)
i <- sum(resultadovspredict$ganhador == resultadovspredict$previsoes)/nrow(resultadovspredict)
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
# Criando variável páginas e criando variável 'p' que será a parte final do url (o número da página) -------
pagina <- 'https://www.vlr.gg/matches'
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs
matchs <- read_html(pagina) %>%
html_nodes('a') #%>% html_attr('href')
View(matchs)
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
funcaoPagina(pagina)
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
funcaoPagina('https://www.vlr.gg/matches')
a <- funcaoPagina('https://www.vlr.gg/matches')
a
a[1]
a[2]
a[3]
a[4]
date()
data <- date()
data
Sys.Date()
m <- 1
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
a <- funcaoPagina('https://www.vlr.gg/matches')
m <- 1
dff <- list()
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert')
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert')
View(diario)
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text()
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T)
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date()
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date.character()
?as.Date
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date.character(.[1])
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date.character(.[1]) %>% .[1]
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date(.[1]) %>% .[1]
diarioz <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date(.[1]) %>% .[1]
Sys.Date()
diario == Sys.Date()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
}}
else{}
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
}}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
diario <- 0
diario == Sys.Date()
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
View(dff)
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
#diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
diario <- read_html(a[3]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
x <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
a[4]
x <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
x <- as.Date()
x <- as.Date(x)
x <- as.Date(x[1])
x <- as.Date.character(x[1])
x <- as.Date(x[1])
x
x[1]
as.Date(x[1])
x <- x[1]
as.Date(x)
typeof(x)
as.Date(x, '%d/%m%d')
as.Date(x, '%d/%m')
as.Date(x, '%d/%m/%d')
as.Date.character(x, '%d/%m/%d')
as.Date.character(x, '%m/%d')
x <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
x <- read_html(a[1]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
as.Date(x)
as.Date(x[1])
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
z <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.numeric()
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1]
as.Date(diario)
day(Sys.Date)
diario
as.Date(diario, format = "%A, %B %d%t%*o")
as.Date("Sunday, February 19th", format = "%A, %B %d%t%*o")
Sys.getlocale()
as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada
Sys.getlocale()
Sys.setlocale("LC_TIME", "pt_BR")
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada
library(lubridate)
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada
data_formatada <- mdy("Sunday, February 19th")
data_formatada
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %d%{st|nd|rd|th}")
data_formatada
data_formatada <- parse_date_time("Sunday, February 19th", orders = c("wdy, mdy", "B d, y"))
date_str <- "Sunday, February 19th"
date_str <- gsub("(th|nd|rd|st)", "", date_str) # remover sufixos de dia
as.Date(date_str, "%A, %B %d")
date_str <- "Sunday, February 19th"
parse_date_time(date_str, orders = "%A, %B %d", locale = "en_US")
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
#diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
dff <- dff %>% map_df(as_tibble)
Sys.Date()
nome_arquivo <- paste(Sys.Date(), '_urls', sep = '')
write.csv2(a, nome_arquivo)
nome_arquivo <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(a, nome_arquivo)
nome_arquivo <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(a, paste('csv/', nome_arquivo, sep = ''))
write.csv2(a, paste('csv/catalogacao_diaria', nome_arquivo, sep = ''))
nome_arquivo <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(a, paste('csv/catalogacao_diaria', nome_arquivo, sep = ''))
write.csv2(a, paste('csv/catalogacao_diaria/', nome_arquivo, sep = ''))
nome_arquivo_partidas <- paste(Sys.Date(), '_partidas.csv', sep = '')
write.csv2(a, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b
n <- 1
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm(b)
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b <- ''
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b <- b[0]
b <- '' %>% [0]
b <- '' %>% .[0]
rm(b)
b <- '' %>% .[0]
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(b, paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = ''))
nome_arquivo_partidas <- paste(Sys.Date(), '_partidas.csv', sep = '')
write.csv2(dff, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
Sys.time()
Sys.date()
Sys.Date()
Sys.Date() + 1
Sys.Date() + 2
library(taskscheduleR)
install.packages(taskscheduleR)
install.packages('taskscheduleR')
library(taskscheduleR)
# Define a tarefa
catalogacao_diaria <- taskscheduler_create(taskname = 'Catalogar partidas diariamente',
rscript = "C:/Users/anonb/Documents/TCC Pós/Scripts/catalogacao_diaria.R",
schedule = "DAILY",
starttime = "00:00")
