timeB <- paste0('\\b', timeB, '\\b')
jogadores_buscados <- []
jogadores_buscados <- list[]
jogadores_buscados <- ()
jogadores_buscados <- list()
timeA_df <- list()
timeB_df <- list()
timeA_df[] <- paste('https://www.vlr.gg/search/?q=', i, sep = '')
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
timeA_df[] <- paste('https://www.vlr.gg/search/?q=', i, sep = '')
}
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
teste <- paste('https://www.vlr.gg/search/?q=', i, sep = '')
}
timeA <- timeA$Player
timeB <- timeB$Player
timeA <- info[[1]]
timeB <- info[[2]]
timeA <- lapply(timeA, str_replace_all, '\n', '') %>%
lapply(str_replace_all, '\t', '')
timeB <- lapply(timeB, str_replace_all, '\n', '') %>%
lapply(str_replace_all, '\t', '')
timeA <- as.data.frame(timeA[1])
timeB <- as.data.frame(timeB[1])
colnames(timeA) <- '1'
colnames(timeB) <- '1'
timeA <- separate(timeA, '1', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
timeB <- separate(timeB, '1', into = c("Player", "Team"), sep ="\\s+", extra = "merge")
timeA <- timeA$Player
timeB <- timeB$Player
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
teste <- paste('https://www.vlr.gg/search/?q=', i, sep = '')
}
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
teste <- paste('https://www.vlr.gg/search/?q=', '&type=players', sep = i)
}
View(info)
# Pegando os dados no link da partida ----------------------------------------------------------------------
info <- read_html(string_url) %>%
html_nodes('table') %>%
html_table('class.mod-player')
testando <- read_html(string_url) %>%
hrml_nodes('class.mod-player') %>%
html_table()
testando <- read_html(string_url) %>%
html_nodes('class.mod-player') %>%
html_table()
View(testando)
testando <- read_html(string_url) %>%
html_nodes('class.mod-player') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('/html/body/div[5]/div[1]/div[3]/div[6]/div/div[3]/div[2]/div[2]/div[1]/table/tbody/tr[1]/td[1]/div/a') %>%
html_table()
testando <- read_html(string_url) %>%
html_nodes('//*[@id="wrapper"]/div[1]/div[3]/div[6]/div/div[3]/div[2]/div[2]/div[1]/table/tbody/tr[1]/td[1]/div/a') %>%
html_table()
testando <- read_html(string_url) %>%
html_nodes('class.flag mod-br a') %>%
html_table()
testando <- read_html(string_url) %>%
html_nodes('class.flag mod-br a') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('class.flag mod-br') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td. mod-player') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td.class mod-player') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td.class mod-player') %>%
html_table()
testando <- read_html(string_url) %>%
html_nodes('td.class mod-player') %>%
html_table()
testando <- read_html(string_url) %>%
html_nodes('td.mod-player') %>%
html_table()
View(testando)
testando <- read_html(string_url) %>%
html_nodes('td.mod-player') %>%
html_text()
testando
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td.mod-player href') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_text()
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('td.mod-player') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
testando
testando[1]
testando[2]
testando[3]
testando[4]
testando[5]
testando <- read_html(string_url) %>%
html_nodes('td.mod-player b') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats-game a') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats-game a') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats-game') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats-container a') %>%
html_attr('href')
testando
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats a') %>%
html_attr('href')
testando
testando <- read_html(string_url) %>%
html_node('td.mod-player a') %>%
html_attr('href')
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
?html_attr
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats a') %>%
html_attrs('href')
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats a') %>%
html_attrs()
View(testando)
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats a') %>%
html_attrs()
testando[1]
testando[3]
testando[3,]
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats a') %>%
html_attr()
testando <- read_html(string_url) %>%
html_nodes('div.vm-stats a') %>%
html_attr('href')
testando[1:10]
testando <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
testando
busca_links <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
# Url da partida
string_url <- 'https://www.vlr.gg/167037/tropicaos-vs-keyd-stars-challengers-league-brazil-split-1-w3'
# Pegando os dados no link da partida ----------------------------------------------------------------------
info <- read_html(string_url) %>%
html_nodes('table') %>%
html_table()
View(info)
# Url da partida
string_url <- 'https://www.vlr.gg/167037/tropicaos-vs-keyd-stars-challengers-league-brazil-split-1-w3'
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
timeA
timeB
teste <- paste('https://www.vlr.gg', i, sep = '')
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
teste <- paste('https://www.vlr.gg', i, sep = '')
}
teste_1 <- 'https://www.vlr.gg/player/1586/v1nny'
infos_jogadores <- read_html(teste_1) %>%
html_nodes('table') %>%
html_table()
View(infos_jogadores)
teste <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
teste
teste_1 <- 'https://www.vlr.gg/player/1586/v1nny/?timespan=all'
infos_jogadores <- read_html(teste_1) %>%
html_nodes('table') %>%
html_table()
View(infos_jogadores)
View(infos_jogadores)
infos_jogadores
unlist(infos_jogadores)
x <- unlist(infos_jogadores)
x <- infos_jogadores %>%  map_df(as_tibble)
infos_jogadores <- infos_jogadores %>%  map_df(as_tibble)
infos_jogadores <- infos_jogadores %>%  map_df(as_tibble, .name_repair = 'minimal')
View(infos_jogadores)
infos_jogadores %>% dplyr::select(Rating, ACS, 'K:D', ADR, KAST)
View(infos_jogadores)
infos_jogadores <- read_html(teste_1) %>%
html_nodes('table') %>%
html_table()
infos_jogadores <- infos_jogadores %>%  map_df(as_tibble, .name_repair = 'minimal') %>%
dplyr::select(Rating, ACS, 'K:D', ADR, KAST)
View(infos_jogadores)
mean(infos_jogadores$Rating)
mean(infos_jogadores$Rating, na.rm = T)
mean(infos_jogadores$ACS)
# Carregando pacotes -------------------------------------------------------------------------------------
library(dplyr)
library(tidyr)
library(rvest)
library(httr)
# Armazenando a url em uma variável -----------------------------------------------------------------------
link <- "https://www.vlr.gg/stats/?event_group_id=all&event_id=all&region=all&country=all&min_rounds=50&min_rating=1550&agent=all&map_id=all&timespan=all"
# Pegando os Dados no link e separando time e jogador em duas colunas -------------------------------------
players <- read_html(link) %>%
html_node("table") %>%
html_table() %>%
separate(Player, into = c("Player", "Team"), sep = "\\s+", extra = "merge") %>%
select('Player', 'Team', 'R', 'ACS', 'K:D', 'KAST', 'ADR') %>%
as.data.frame()
View(players)
mean(infos_jogadores$Rating[1:11], na.rm = T)
mean(infos_jogadores$Rating[1:6], na.rm = T)
mean(infos_jogadores$Rating[1:10], na.rm = T)
mean(infos_jogadores$Rating[1:7], na.rm = T)
mean(infos_jogadores$Rating[1:8], na.rm = T)
mean(infos_jogadores$Rating[1:9], na.rm = T)
mean(infos_jogadores$Rating[1:10], na.rm = T)
# Carregando pacotes --------------------------------------------------------------------------------------
library(dplyr)
library(tidyr)
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(readr)
library(purrr)
# Url da partida
string_url <- 'https://www.vlr.gg/167037/tropicaos-vs-keyd-stars-challengers-league-brazil-split-1-w3'
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
teste <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
teste_1 <- 'https://www.vlr.gg/player/1586/v1nny/?timespan=all'
infos_jogadores <- read_html(teste_1) %>%
html_nodes('table') %>%
html_table()
infos_jogadores <- infos_jogadores %>%  map_df(as_tibble, .name_repair = 'minimal') %>%
dplyr::select(Rating, ACS, 'K:D', ADR, KAST)
View(infos_jogadores)
links_jogadores <- list()
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadores[[length(links_jogadores)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
View(links_jogadores)
for(i in timeB){
links_jogadores[[length(links_jogadores)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadores)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
for(i in timeB){
links_jogadoresB[[length(links_jogadores)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
View(links_jogadores)
links_jogadoresA <- list()
links_jogadoresB <- list()
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadoresA)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
for(i in timeB){
links_jogadoresB[[length(links_jogadoresB)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
rm(links_jogadores)
links_jogadoresA
View(links_jogadoresA)
as.data.frame(links_jogadoresA)
z <- as.data.frame(links_jogadoresA)
View(z)
links_jogadoresA <- links_jogadoresA %>% map_df(as_tibble)
links_jogadoresB <- links_jogadoresB %>% map_df(as_tibble)
for(i in timeB){
links_jogadoresB[[length(links_jogadoresB)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadoresA)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
links_jogadoresA <- list()
links_jogadoresB <- list()
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadoresA)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
for(i in timeB){
links_jogadoresB[[length(links_jogadoresB)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
links_jogadoresA[1]
links_jogadoresA[2]
links_jogadoresA[3]
#links_jogadoresA <- links_jogadoresA %>% map_df(as_tibble)
#links_jogadoresB <- links_jogadoresB %>% map_df(as_tibble)
for(i in links_jogadoresA){
infos_jogadores <- read_html(links_jogadoresA[i]) %>%
html_nodes('table') %>%
html_table()
}
infos_jogadores <- read_html(as.string(links_jogadoresA[i])) %>%
html_nodes('table') %>%
html_table()
infos_jogadores <- read_html(as.character(links_jogadoresA[i])) %>%
html_nodes('table') %>%
html_table()
#links_jogadoresA <- links_jogadoresA %>% map_df(as_tibble)
#links_jogadoresB <- links_jogadoresB %>% map_df(as_tibble)
for(i in links_jogadoresA){
infos_jogadores <- read_html(as.character(links_jogadoresA[i])) %>%
html_nodes('table') %>%
html_table()
}
as.character(links_jogadoresA[1])
links_jogadoresA <- links_jogadoresA %>% map_df(as_tibble)
links_jogadoresB <- links_jogadoresB %>% map_df(as_tibble)
for(i in links_jogadoresA){
infos_jogadores <- read_html(as.character(links_jogadoresA[i])) %>%
html_nodes('table') %>%
html_table()
}
for(i in links_jogadoresA){
infos_jogadores <- read_html(links_jogadoresA[i]) %>%
html_nodes('table') %>%
html_table()
}
View(links_jogadoresA)
links_jogadoresA[2]
links_jogadoresA[,2]
links_jogadoresA[2,]
links_jogadoresA[3,]
for(i in links_jogadoresA){
infos_jogadores <- read_html(links_jogadoresA[i,]) %>%
html_nodes('table') %>%
html_table()
}
infos_jogadores <- read_html(as.character(links_jogadoresA[i,])) %>%
html_nodes('table') %>%
html_table()
links_jogadoresA <- as.character(links_jogadoresA)
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
links_jogadoresA <- list()
links_jogadoresB <- list()
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadoresA)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
for(i in timeB){
links_jogadoresB[[length(links_jogadoresB)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
links_jogadoresA <- links_jogadoresA %>% map_df(as_tibble)
links_jogadoresB <- links_jogadoresB %>% map_df(as_tibble)
for(i in links_jogadoresA){
infos_jogadores <- read_html(as.character(links_jogadoresA[i,])) %>%
html_nodes('table') %>%
html_table()
}
infos_jogadores <- infos_jogadores %>%  map_df(as_tibble, .name_repair = 'minimal') %>%
dplyr::select(Rating, ACS, 'K:D', ADR, KAST)
View(infos_jogadores)
rm(z)
infos_jogadores <- list()
for(i in links_jogadoresA){
url_salvo <- read_html(as.character(links_jogadoresA[i,]))
infos_jogadores[[length(info_jogadores)+1]] <- url_salvo %>%
html_nodes('table') %>%
html_table()
}
links_jogadoresA %>%
lapply(read_html) %>%
lapply(html_nodes, 'table') %>%
vapply(html_table())
links_jogadoresA$value
links_jogadoresA$value[1]
links_jogadoresA$value[2]
for(i in links_jogadoresA){
infos_jogadores <- read_html(as.character(links_jogadoresA$value[i])) %>%
html_nodes('table') %>%
html_table()
}
x <- c(2, 3)
x <- c(2, 3t)
x <- c(2, '3t')
x
typeof
typeof(x)
append(x, 't3423')
# Url da partida
string_url <- 'https://www.vlr.gg/167037/tropicaos-vs-keyd-stars-challengers-league-brazil-split-1-w3'
# Pegando os dados no link da partida ----------------------------------------------------------------------
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
# Criando um laço for que armazenará o url de cada página dentro da variável paginas -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadoresA)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
for(i in timeB){
links_jogadoresB[[length(links_jogadoresB)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
links_jogadoresA <- list()
links_jogadoresB <- list()
#  -----------------------
for (i in timeA){
links_jogadoresA[[length(links_jogadoresA)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
for(i in timeB){
links_jogadoresB[[length(links_jogadoresB)+1]] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
links_jogadoresA <- links_jogadoresA %>% map_df(as_tibble)
links_jogadoresB <- links_jogadoresB %>% map_df(as_tibble)
?append
for(i in links_jogadoresA){
append(infos_jogadores) <- read_html(as.character(links_jogadoresA$value[i])) %>%
html_nodes('table') %>%
html_table()
}
# Url da partida
string_url <- 'https://www.vlr.gg/167037/tropicaos-vs-keyd-stars-challengers-league-brazil-split-1-w3'
# Pegando os dados no link da partida ----------------------------------------------------------------------
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
#  -----------------------
for (i in timeA){
timeA <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
timeA
# Pegando os dados no link da partida ----------------------------------------------------------------------
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
timeA
timeA[1]
timeA[2]
timeA[3]
timeA[4]
#  -----------------------
for (i in timeA){
timeA[i] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
}
timeA
#  -----------------------
n <- 1
# Pegando os dados no link da partida ----------------------------------------------------------------------
links_jogadores <- read_html(string_url) %>%
html_nodes('td.mod-player a') %>%
html_attr('href')
timeA <- links_jogadores[1:5]
timeB <- links_jogadores[6:10]
#  -----------------------
n <- 1
for (i in timeA){
timeA[n] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
n = n + 1
}
timeA
n <- 1
for(i in timeB){
timeB[n] <- paste('https://www.vlr.gg', '/?timespan=all', sep = i)
n = n + 1
}
