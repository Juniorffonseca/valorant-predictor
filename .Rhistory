tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_lido %>%
html_nodes("table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n) %>% separate(as.data.frame(.[1]), 'placar[1]', into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, '\t', '') %>%
str_replace_all('\n', ' ') %>%
str_replace_all('/  ', '')
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, '\t', '') %>%
str_replace_all('\n', ' ') %>%
str_replace_all('/  ', '')
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
print(Sys.time() - start_time)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
start_time <- Sys.time()
for (i in a[,]){
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
?separate
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_lido %>%
html_nodes("table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n) %>% as.data.frame(.[1]) %>%
separate(col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, '\t', '') %>%
str_replace_all('\n', ' ') %>%
str_replace_all('/  ', '')
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, '\t', '') %>%
str_replace_all('\n', ' ') %>%
str_replace_all('/  ', '')
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
print(Sys.time() - start_time)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
start_time <- Sys.time()
for (i in a[,]){
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
warnings()
View(dff)
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_lido %>%
html_nodes("table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n) %>% as.data.frame(.[1]) %>%
separate(col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge") %>%
cbind(info, ganhador)
print(Sys.time() - start_time)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
start_time <- Sys.time()
for (i in a[,]){
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_lido %>%
html_nodes("table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n) %>% as.data.frame(.[1]) %>%
separate(col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
print(Sys.time() - start_time)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
start_time <- Sys.time()
for (i in a[,]){
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_lido %>%
html_nodes("table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n) %>% as.data.frame(.[1]) %>%
separate(col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(Sys.time() - start_time)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_lido %>%
html_nodes("table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n)
placar <- as.data.frame(placar[1])
placar <- separate(placar, col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(Sys.time() - start_time)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
?html_nodes
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_nodes(html_lido, "table") %>%
html_table()
placar <- html_lido %>%
html_nodes("div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n)
placar <- as.data.frame(placar[1])
placar <- separate(placar, col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(Sys.time() - start_time)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
info <- html_nodes(html_lido, "table") %>%
html_table()
placar <- html_nodes(html_lido, "div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n)
placar <- as.data.frame(placar[1])
placar <- separate(placar, col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(Sys.time() - start_time)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
placar <- html_nodes(html_lido, "div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n)
placar <- as.data.frame(placar[1])
placar <- separate(placar, col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- html_nodes(html_lido, "table") %>%
html_table() %>% rbind(.[[3]], .[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(Sys.time() - start_time)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
placar <- html_nodes(html_lido, "div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n)
placar <- as.data.frame(placar[1])
placar <- separate(placar, col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- html_nodes(html_lido, "table") %>%
html_table()
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(Sys.time() - start_time)
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
catalogarporUrl <- function (string){
tryCatch(
{
html_lido <- read_html(as.character(string))
placar <- html_nodes(html_lido, "div.js-spoiler") %>% html_text(trim=T) %>%
str_replace_all(t_n)
placar <- as.data.frame(placar[1])
placar <- separate(placar, col = 1, into = c('Time1', 'Time2'), sep = ':', extra = 'merge')
ifelse(placar$Time1 > placar$Time2, ganhador <- c(1,1,1,1,1,0,0,0,0,0), ganhador <- c(0,0,0,0,0,1,1,1,1,1))
info <- html_nodes(html_lido, "table") %>%
html_table()
info <- rbind(info[[3]], info[[4]])
colnames(info) <- c('jogador', 'time', 'R', 'ACS', 'K', 'D', 'A', '+/-', 'KAST', 'ADR', 'HS%', 'FK', 'FD', 'z')
info <- select(info, 'jogador', 'R', 'ACS', 'K', 'D', 'KAST', 'ADR')
info$R <- substr(info$R, 1, 4)
info$ACS <- substr(info$ACS, 1, 3)
info$K <- str_replace_all(info$K, t_n2)
info$K <- substr(info$K, 1, 3)
info$D <- str_replace_all(info$D, t_n2)
info$D <- substr(info$D, 1, 3)
info$KAST <- substr(info$KAST, 1, 3)
info$ADR <- substr(info$ADR, 1, 3)
info <- separate(info, 'jogador', into = c("Player", "Team"), sep = "\\s+", extra = "merge")
info <- cbind(info, ganhador)
return(info)
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
print(mean(Sys.time() - start_time))
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
valor <- Sys.time() - start_time
print(mean(valor))
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
valor <- list()
rm (c, f, i, p, matchs, paginas)
m <- 1
dff <- list()
valor <- list()
t_n <- c('\n' = '', '\t' = '')
t_n2 <- c('\t' = '', '\n' = ' ', '/  ' = '')
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
valor[[m]] <- Sys.time() - start_time
print(mean(valor))
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
for (i in a[,]){
start_time <- Sys.time()
tryCatch({
dff[[m]] <- catalogarporUrl(a[m,])
valor[[m]] <- Sys.time() - start_time
print(mean(as.numeric(valor)))
m = m + 1
}, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
