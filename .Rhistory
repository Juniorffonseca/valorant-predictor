i <<- sum(predictVstest$ganhador == nn2)/ nrow(test_data)
print(i)
}
while ( i < 0.647) {
acharnn()
}
ggplot(data = previsao, mapping = aes(x = previsao1, y = previsao2, colour = ganhador)) +
geom_tile(aes(fill = ganhador)) +
geom_point() +
theme_bw()
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
load(file = "model_nnet.rda")
jogos <- read.csv2('csv/partidas.csv') %>% dplyr::select(-X, -ganhador)
outras_partidas <- read.csv2('csv/totalidade_jogos_sem_na.csv') %>% dplyr::select(-X, -ganhador)
jogos_scale <- rbind(jogos, outras_partidas)
jogos_scale <- scale(jogos_scale)
partidas <- jogos_scale[-1:-813,]
partidas <- as.data.frame(partidas)
previsao <- compute(n, partidas)
previsao <- previsao$net.result
partidas_reversas <- partidas
partidas_reversas$time1R <- partidas$time2R
partidas_reversas$time2R <- partidas$time1R
partidas_reversas$time1ACS <- partidas$time2ACS
partidas_reversas$time2ACS <- partidas$time1ACS
partidas_reversas$time1KAST <- partidas$time2KAST
partidas_reversas$time2KAST <- partidas$time1KAST
partidas_reversas$time1KD <- partidas$time2KD
partidas_reversas$time2KD <- partidas$time1KD
partidas_reversas$time1ADR <- partidas$time2ADR
partidas_reversas$time2ADR <- partidas$time1ADR
previsao2 <- compute(n, partidas_reversas)
previsao2 <- previsao2$net.result
previsoes <- cbind(previsao, previsao2)
transforma_positivo <- function (x){
y = atan(x*10) + pi/2
return (y)
}
transforma_probabilidade <- function (y, x){
z = y / (y + x)
w = x / (x + y)
c = as.matrix(c(z,w))
return(c)
}
a <- transforma_positivo(previsao)
b <- transforma_positivo(previsao2)
previsao <- transforma_probabilidade(a,b)
previsao <- previsao * 100
previsao2 <- previsao[(length(previsao)/2+1):length(previsao)]
previsao <- previsao[1:(length(previsao)/2)]
previsao <- cbind(previsao, previsao2)
ganhadores <- read.csv2('csv/totalidade_jogos_sem_na.csv') %>% dplyr::select(ganhador)
previsao <- cbind(previsao, ganhadores)
colnames(previsao) <- c('previsao1', 'previsao2', 'ganhador')
previsao <- previsao %>%
mutate(ganhador = as.factor(ganhador))
# Plot
ggplot(data = previsao, mapping = aes(x = previsao1, y = previsao2, colour = ganhador)) +
geom_tile(aes(fill = ganhador)) +
geom_point() +
theme_bw()
resultado_previsto <- ifelse(previsao$previsao1>previsao$previsao2, 1, 0)
resultadovspredict <- cbind(resultado_previsto, ganhadores)
i <- sum(resultadovspredict$ganhador == resultadovspredict$resultado_previsto)/nrow(resultadovspredict)
y <- round(i, 2)
View(resultadovspredict)
count(resultado_previsto)
length(resultado_previsto)
sum(resultado_previsto)
View(partidas)
resultadovspredict <- cbind(partidas, resultado_previsto, ganhadores)
i <- sum(resultadovspredict$ganhador == resultadovspredict$resultado_previsto)/nrow(resultadovspredict)
y <- round(i, 2)
# barchart with added parameters
barplot(resultadovspredict,
main = "Vitoria por R",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"),
col = "darkred",
horiz = TRUE)
# barchart with added parameters
barplot(resultadovspredict,
main = "R",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"),
col = "darkred",
horiz = TRUE)
?barplot
barplot(resultadovspredict,
main = "Survival of Each Class",
xlab = "Class",
col = c("red","green")
)
barplot(as.matrix(resultadovspredict),
main = "Survival of Each Class",
xlab = "Class",
col = c("red","green")
)
legend("topleft",
c("Not survived","Survived"),
fill = c("red","green")
)
?barplt
?barplot
barplot(as.matrix(resultadovspredict),
main = "Vitória por estatística",
xlab = "Estatística",
ylab = 'Vitórias'
col = c("red","green")
barplot(as.matrix(resultadovspredict),
main = "Vitória por estatística",
xlab = "Estatística",
ylab = 'Vitórias',
col = c("red","green")
)
legend("topleft",
c("Não ganhou","Ganhou"),
fill = c("red","green")
)
barplot(as.matrix(resultadovspredict),
main = "Vitória por estatística",
xlab = "Estatística",
ylab = 'Vitórias',
col = c("red","green",
formula = ganhador == 1 ~ time1R + time2R + time1ACS + time2ACS + time1KAST + time2KAST + time1KD + time2KD +
time1ADR + time2ADR)
)
legend("topleft",
c("Não ganhou","Ganhou"),
fill = c("red","green")
)
ggplot(resultadovspredict, aes(cut, fill=cut)) + geom_bar() + facet_grid(. ~ clarity)
ggplot(resultadovspredict, aes(cut, fill=cut)) + geom_bar() + facet_grid(. ~ R)
ggplot(resultadovspredict, aes(cut, fill=cut)) + geom_bar() + facet_grid(. ~ ganhador)
a
ggplot(data=resultadovspredict, aes(x=R)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = ganhador == 1))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = 'ganhador' == 1))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = ))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = ganhadores))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = ganhadores$ganhador))
ggplot(data=resultadovspredict, aes(x='R')) +
geom_bar(aes(y = 'ganhador'))
ggplot(data=resultadovspredict, aes(x='time1R')) +
geom_bar(aes(y = 'ganhador'))
ggplot(data=resultadovspredict, aes(x='time1R' > 'time2R')) +
geom_bar(aes(y = 'ganhador'))
ggplot(data=resultadovspredict, aes(x='time1R' > 'time2R')) +
geom_bar(aes(y = 'ganhador' == 1))
View(ganhadores)
acertos_erros <- ifelse(resultadovspredict$ganhador == resultadovspredict$resultado_previsto, 'Acertos', 'Erros')
acertos_erros <- ifelse(resultadovspredict$ganhador == '1' & '1' == resultadovspredict$resultado_previsto, 'Acerto_1', 'Erro_1')
?switch
acertos_erros <- c(resultadovspredict$resultado_previsto, resultadovspredict$ganhador)
acertos_erros <- paste(resultadovspredict$resultado_previsto, resultadovspredict$ganhador)
acertos_erros
ACS <- ifelse(resultadovspredict$time1ACS > resultadovspredict$time2ACS, 'ACS Maior', 'ACS Menor')
R <- ifelse(resultadovspredict$time1R > resultadovspredict$time2R, 'R1 Maior', 'R1 Menor')
R <- ifelse(resultadovspredict$time1R > resultadovspredict$time2R, 1, 0)
R <- ifelse(resultadovspredict$time1R > resultadovspredict$time2R, 1, 0)
ACS <- ifelse(resultadovspredict$time1ACS > resultadovspredict$time2ACS, 1, 0)
KAST <- ifelse(resultadovspredict$time1KAST > resultadovspredict$time2KAST, 1, 0)
KD <- ifelse(resultadovspredict$time1KD > resultadovspredict$time2KD, 1 , 0)
ADR <- ifelse(resultadovspredict$time1ADR > resultadovspredict$time2ADR, 1 , 0)
acertos_erros <- paste(resultadovspredict$resultado_previsto, resultadovspredict$ganhador)
grafico_data <- cbind(R, ACS, KAST, KD, ADR, acertos_erros)
grafico_data <- as.data.frame(c(R, ACS, KAST, KD, ADR, acertos_erros))
grafico_data <- as.data.frame(R, ACS, KAST, KD, ADR, acertos_erros)
grafico_data <- as.data.frame(cbind(R, ACS, KAST, KD, ADR, acertos_erros))
View(grafico_data)
ggplot(grafico_data, aes(R)) +
geom_bar(fill = "green") +
theme_pubclean()
ggplot(grafico_data, aes(R)) +
geom_bar(fill = "green")
?aes
ggplot(grafico_data, aes(x = R, y = acertos_erros)) +
geom_bar(fill = "green")
ggplot(grafico_data, aes(x = R)) +
geom_bar(fill = "green")
ggplot(grafico_data, aes(x = (R == 1 & acertos_erros == '1 1'))) +
geom_bar(fill = "green")
ggplot(grafico_data, aes(x = (R == 1 & acertos_erros == '1 1', R) )) +
ggplot(grafico_data, aes(x = (R == 1 & acertos_erros == '1 1'), R )) +
geom_bar(fill = "green")
ggplot(grafico_data, aes(x = (R == 1 & acertos_erros == '1 1'))) +
geom_bar(fill = "green")
library(plotly)
library(ggrepel)
library(ggrepel)
library(PerfomanceAnalytics)
install.packages(PerfomanceAnalytics)
install.packages('PerfomanceAnalytics')
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(plotly)
library(ggrepel)
ggplot(grafico_data, aes(x = (R == 1), y = ganhou_time1)) +
geom_bar(fill = "green")
ganhou_time1 <- paste(resultadovspredict$resultado_previsto, resultadovspredict$ganhador)
grafico_data <- as.data.frame(cbind(R, ACS, KAST, KD, ADR, ganhou_time1))
ggplot(grafico_data, aes(x = (R == 1), y = ganhou_time1)) +
geom_bar(fill = "green")
ganhou_timez <- as.factor(ganhou_time1)
grafico_data <- as.data.frame(cbind(R, ACS, KAST, KD, ADR, ganhou_timez))
ggplot(grafico_data, aes(x = (R == 1), y = ganhou_timez)) +
geom_bar(fill = "green")
rm(ganhou_timez)
rm(a,b)
rm(partidas)
rm(outras_partidas)
rm(partidas_reversas)
rm(n)
rm(y)
rm(transforma_positivo())
rm(transforma_positivo
)
rm(transforma_probabilidade)
View(resultadovspredict)
jogos_time1ganhou <- filter(resultadovspredict, resultadovspredict$ganhador == 1)
jogos_time2ganhou <- filter(resultadovspredict, resultadovspredict$ganhador == 0)
View(jogos_time1ganhou)
R_1 <- ifelse(jogos_time1ganhou$time1R > jogos_time1ganhou$time2R, 1, 0)
ACS_1 <- ifelse(jogos_time1ganhou$time1ACS > jogos_time1ganhou$time2ACS, 1, 0)
KAST_1 <- ifelse(jogos_time1ganhou$time1KAST > jogos_time1ganhou$time2KAST, 1, 0)
KD_1 <- ifelse(jogos_time1ganhou$time1KD > jogos_time1ganhou$time2KD, 1 , 0)
ADR_1 <- ifelse(jogos_time1ganhou$time1ADR > jogos_time1ganhou$time2ADR, 1 , 0)
previu_time1 <- ifelse(jogos_time1ganhou$resultado_previsto == 1, 1, 0)
grafico_data_1 <- as.data.frame(cbind(R_1, ACS_1, KAST_1, KD_1, ADR_1, ganhou_time1))
R_1 <- ifelse(jogos_time1ganhou$time1R > jogos_time1ganhou$time2R, 1, 0)
ACS_1 <- ifelse(jogos_time1ganhou$time1ACS > jogos_time1ganhou$time2ACS, 1, 0)
KAST_1 <- ifelse(jogos_time1ganhou$time1KAST > jogos_time1ganhou$time2KAST, 1, 0)
KD_1 <- ifelse(jogos_time1ganhou$time1KD > jogos_time1ganhou$time2KD, 1 , 0)
ADR_1 <- ifelse(jogos_time1ganhou$time1ADR > jogos_time1ganhou$time2ADR, 1 , 0)
previu_time1 <- ifelse(jogos_time1ganhou$resultado_previsto == 1, 1, 0)
grafico_data_1 <- as.data.frame(cbind(R_1, ACS_1, KAST_1, KD_1, ADR_1, ganhou_time1))
grafico_data_1 <- as.data.frame(cbind(R_1, ACS_1, KAST_1, KD_1, ADR_1, previu_time1))
R_2 <- ifelse(jogos_time2ganhou$time2R > jogos_time2ganhou$time2R, 1, 0)
ACS_2 <- ifelse(jogos_time2ganhou$time2ACS > jogos_time2ganhou$time2ACS, 1, 0)
KAST_2 <- ifelse(jogos_time2ganhou$time2KAST > jogos_time2ganhou$time2KAST, 1, 0)
KD_2 <- ifelse(jogos_time2ganhou$time2KD > jogos_time2ganhou$time2KD, 1 , 0)
ADR_2 <- ifelse(jogos_time2ganhou$time2ADR > jogos_time2ganhou$time2ADR, 1 , 0)
previu_time2 <- ifelse(jogos_time2ganhou$resultado_previsto == 1, 1, 0)
grafico_data_2 <- as.data.frame(cbind(R_2, ACS_2, KAST_2, KD_2, ADR_2, previu_time2))
ggplot(grafico_data_1, aes(x = (R == 1), y = ganhou_time1)) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(x = (R == 1), y = previu_time1)) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(x = R, y = previu_time1)) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(x = R_1, y = previu_time1)) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(x = 'R_1', y = previu_time1)) +
geom_bar(fill = "green")
View(grafico_data_1)
grafico_data_1$previu_time1 <- as.factor(grafico_data_1$previu_time1)
ggplot(grafico_data_1, aes(x = 'R_1', y = previu_time1)) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(x = 'R_1', y = (previu_time1 == 1))) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(stat = 'identity', x = 'R_1', y = previu_time1)) +
geom_bar(fill = "green")
ggplot(grafico_data_1, aes(x = 'R_1', y = previu_time1)) +
geom_bar(fill = "green", stat = 'identity')
load(file = "model_nnet.rda")
jogos <- read.csv2('csv/partidas.csv') %>% dplyr::select(-X, -ganhador)
outras_partidas <- read.csv2('csv/totalidade_jogos_sem_na.csv') %>% dplyr::select(-X, -ganhador)
jogos_scale <- rbind(jogos, outras_partidas)
jogos_scale <- scale(jogos_scale)
partidas <- jogos_scale[-1:-813,]
partidas <- as.data.frame(partidas)
previsao <- compute(n, partidas)
previsao <- previsao$net.result
partidas_reversas <- partidas
partidas_reversas$time1R <- partidas$time2R
partidas_reversas$time2R <- partidas$time1R
partidas_reversas$time1ACS <- partidas$time2ACS
partidas_reversas$time2ACS <- partidas$time1ACS
partidas_reversas$time1KAST <- partidas$time2KAST
partidas_reversas$time2KAST <- partidas$time1KAST
partidas_reversas$time1KD <- partidas$time2KD
partidas_reversas$time2KD <- partidas$time1KD
partidas_reversas$time1ADR <- partidas$time2ADR
partidas_reversas$time2ADR <- partidas$time1ADR
previsao2 <- compute(n, partidas_reversas)
previsao2 <- previsao2$net.result
previsoes <- cbind(previsao, previsao2)
transforma_positivo <- function (x){
y = atan(x*10) + pi/2
return (y)
}
transforma_probabilidade <- function (y, x){
z = y / (y + x)
w = x / (x + y)
c = as.matrix(c(z,w))
return(c)
}
a <- transforma_positivo(previsao)
b <- transforma_positivo(previsao2)
previsao <- transforma_probabilidade(a,b)
previsao <- previsao * 100
previsao2 <- previsao[(length(previsao)/2+1):length(previsao)]
previsao <- previsao[1:(length(previsao)/2)]
previsao <- cbind(previsao, previsao2)
ganhadores <- read.csv2('csv/totalidade_jogos_sem_na.csv') %>% dplyr::select(ganhador)
previsao <- cbind(previsao, ganhadores)
colnames(previsao) <- c('previsao1', 'previsao2', 'ganhador')
previsao <- previsao %>%
mutate(ganhador = as.factor(ganhador))
# Plot
ggplot(data = previsao, mapping = aes(x = previsao1, y = previsao2, colour = ganhador)) +
geom_tile(aes(fill = ganhador)) +
geom_point() +
theme_bw()
resultado_previsto <- ifelse(previsao$previsao1>previsao$previsao2, 1, 0)
resultadovspredict <- cbind(partidas, resultado_previsto, ganhadores)
i <- sum(resultadovspredict$ganhador == resultadovspredict$resultado_previsto)/nrow(resultadovspredict)
# y <- round(i, 2)
# Acurácia total em 10284 partidas de 60%
# Preciso fazer um gráfico de estatisticas em função de vitória, ou seja, quais estatisticas tiveram mais impacto em vitorias
ggplot(data = resultadovspredict, mapping = aes(x = , y = previsao2, colour = ganhador)) +
geom_tile(aes(fill = ganhador)) +
geom_point() +
theme_bw()
ggplot(grafico_data, aes(x = (R == 1 & acertos_erros == '1 1'))) +
geom_bar(fill = "green", stat = 'identity')
grafico_data <- as.data.frame(cbind(R, ACS, KAST, KD, ADR, acertos_erros))
R <- ifelse(resultadovspredict$time1R > resultadovspredict$time2R, 1, 0)
ACS <- ifelse(resultadovspredict$time1ACS > resultadovspredict$time2ACS, 1, 0)
KAST <- ifelse(resultadovspredict$time1KAST > resultadovspredict$time2KAST, 1, 0)
KD <- ifelse(resultadovspredict$time1KD > resultadovspredict$time2KD, 1 , 0)
ADR <- ifelse(resultadovspredict$time1ADR > resultadovspredict$time2ADR, 1 , 0)
acertos_erros <- paste(resultadovspredict$resultado_previsto, resultadovspredict$ganhador)
grafico_data <- as.data.frame(cbind(R, ACS, KAST, KD, ADR, acertos_erros))
ggplot(grafico_data, aes(x = (R == 1 & acertos_erros == '1 1'))) +
geom_bar(fill = "green", stat = 'identity')
ggplot(grafico_data, aes(y = ACS, x = (R == 1 & acertos_erros == '1 1'))) +
geom_bar(fill = "green", stat = 'identity')
ggplot(grafico_data, aes(y = R, x = (R == 1 & acertos_erros == '1 1'))) +
geom_bar(fill = "green", stat = 'identity')
ggplot(grafico_data, aes(y = R == 1, x = acertos_erros == '1 1')) +
geom_bar(fill = "green", stat = 'identity')
ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KAST
ggplot(grafico_data, aes(y = KAST, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
r_plot <- ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ACS
acs_plot <- ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KAST
kast_plot <- ggplot(grafico_data, aes(y = KAST, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KD
kd_plot <- ggplot(grafico_data, aes(y = KD, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ADR
adr_plot <- ggplot(grafico_data, aes(y = ADR, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
adr_plot
adr_plot, kd_plot
teste <- c(adr_plot, kd_plot)
teste# jogos_time1ganhou <- filter(resultadovspredict, resultadovspredict$ganhador == 1)
rm(teste)
# Plot R
r_plot <- ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ACS
acs_plot <- ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KAST
kast_plot <- ggplot(grafico_data, aes(y = KAST, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KAST
ggplot(grafico_data, aes(y = KAST, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KD
ggplot(grafico_data, aes(y = KD, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ADR
ggplot(grafico_data, aes(y = ADR, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot KD
ggplot(grafico_data, aes(y = KD, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(x = R, y = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(x = R, y = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot ACS
ggplot(grafico_data, aes(x = ACS, y = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity') +
geom_text(aes(label=paste0(freq, "%\n(", n, ")"), vjust=1.5, colour="white"))
frequency(grafico_data$R)
frequency(grafico_data$R == 1)
frequency(grafico_data$R == 0)
count(grafico_data$R)
count(grafico_data$R == 1)
length(grafico_data$R)
length(grafico_data$R == 1)
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity') +
# geom_text(aes(label=paste0(freq, "%\n(", n, ")"), vjust=1.5, colour="white"))
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = R)) +
geom_bar(fill = "green", stat = 'identity') +
# geom_text(aes(label=paste0(freq, "%\n(", n, ")"), vjust=1.5, colour="white"))
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = R)) +
geom_bar(stat = 'identity') +
# geom_text(aes(label=paste0(freq, "%\n(", n, ")"), vjust=1.5, colour="white"))
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros)) +
geom_bar(stat = 'identity') +
# geom_text(aes(label=paste0(freq, "%\n(", n, ")"), vjust=1.5, colour="white"))
# Plot ACS
ggplot(grafico_data, aes(y = ACS, x = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
count(grafico_data$R)
count(grafico_data$R == 1)
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity') +
geom_text(aes(label= counts), vjust=1.5, colour="white"))
count(grafico_data$R == 1)
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity') +
geom_text(aes(label= counts), vjust=1.5, colour="white")
prop(grafico_data$R == 1)
prop(grafico_data$R)
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_histogram(fill = "green", stat = 'identity') +
geom_text(aes(label= counts), vjust=1.5, colour="white")
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_histogram(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_histogram(fill = "green", stat = 'identity')
# Plot R
ggplot(grafico_data, aes(y = R, x = acertos_erros, fill = acertos_erros)) +
geom_bar(fill = "green", stat = 'identity')
