freq <- table(unlist(paises_jogadores))
paises_jogadores <- read.csv2('csv/paises_jogadores.csv') %>% dplyr::select(-X)
freq <- table(unlist(paises_jogadores))
df_freq <- data.frame(
pais = names(freq),
frequencia = as.numeric(freq)
)
# filtrar as 10 linhas com as maiores frequências
df_top10 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:10, ]
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
labs(title = "Frequência dos 10 Países Mais Comuns", x = "Países", y = "Frequência") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = pais), position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = pais), position = position_stack(vjust = 0.5), size = 4, angle = 45) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = pais), position = position_stack(vjust = 0.5), size = 4, angle = ifelse(nchar(pais) > 7, 45, 0)) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = pais), position = position_stack(vjust = 0.5), size = 4, angle = ifelse(nchar(pais) > 7, 45, 0)) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = pais), position = position_stack(vjust = 0.5), size = 4, angle = ifelse(nchar(pais) > 7, 45, 0)) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(frequencia/sum(frequencia))),
position = position_stack(vjust = 0.5), size = 4, angle = ifelse(nchar(pais) > 7, 45, 0)) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = labels)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(frequencia/sum(frequencia))),
position = position_stack(vjust = 0.5), size = 4, angle = ifelse(nchar(labels) > 7, 45, 0)) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = labels)) +
geom_bar(width = 1, stat = "identity") +
geom_label(aes(label = scales::percent(frequencia/sum(frequencia)),
x = 0.5, y = 0.5),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_label(aes(label = scales::percent(frequencia/sum(frequencia)),
x = 0.5, y = 0.5),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(frequencia/sum(frequencia))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(2,frequencia/sum(frequencia)))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia),2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia)),2)),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia),2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia), 3))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia), 2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
df_top5 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:5, ]
ggplot(df_top5, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia), 2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# Soma a frequência dos países que não estão no top 5
df_top5 <- rbind(df_top5, list(pais = "Outros", frequencia = sum(df_freq$frequencia[!(df_freq$pais %in% df_top5$pais)])))
ggplot(df_top5, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia), 2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# filtrar as 10 linhas com as maiores frequências
df_top10 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:10, ]
# Soma a frequência dos países que não estão no top 5
df_top10 <- rbind(df_top10, list(pais = "Outros", frequencia = sum(df_freq$frequencia[!(df_freq$pais %in% df_top10$pais)])))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia), 2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
df_top20 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:20, ]
df_top20 <- rbind(df_top20, list(pais = "Outros", frequencia = sum(df_freq$frequencia[!(df_freq$pais %in% df_top20$pais)])))
# Gráfico de pizza
ggplot(df_top20, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = scales::percent(round(frequencia/sum(frequencia), 2))),
position = position_stack(vjust = 0.5), size = 4) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países")) +
labs(x = "País", y = "Frequência")
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "País", y = "Frequência")
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "País", y = "Frequência")
# criar um plot de ggplot2 com barras de frequência
ggplot(df_freq, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "País", y = "Frequência")
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "País", y = "Frequência")
df_top20 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:20, ]
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "País", y = "Frequência")
freq <- table(unlist(paises_times))
df_freq <- data.frame(
pais = names(freq),
frequencia = as.numeric(freq)
)
# filtrar as 10 linhas com as maiores frequências
df_top10 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:10, ]
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
labs(title = "Frequência dos 10 Países Mais Comuns", x = "Países", y = "Frequência") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
labs(title = "Frequência de Países") +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = "Set1") +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = "Set2") +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer() +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_gradient() +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_gradient() +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer() +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = 'Dark2') +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = 'Set3') +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = 'Set2') +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = 'Set1') +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = 'Spectral') +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_viridis_d() +
guides(fill = guide_legend(title = "Países"))
# Gráfico de pizza
ggplot(df_top10, aes(x = "", y = frequencia, fill = pais)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
scale_fill_brewer(palette = 'Spectral') +
guides(fill = guide_legend(title = "Países"))
pie(df_top5$frequencia, labels = labels,
main = "Gráfico de Pizza",
col = viridis(length(df_top5$pais)))
pie(df_top5$frequencia, labels = labels,
main = "Gráfico de Pizza",
col = rainbow(length(df_top5$pais)))
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top10, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_top20 <- df_freq[order(df_freq$frequencia, decreasing = TRUE), ][1:20, ]
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_top20 <- rbind(df_top20, list(pais = "Outros", frequencia = sum(df_freq$frequencia[!(df_freq$pais %in% df_top20$pais)])))
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = pais, y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_top20, aes(x = reorder(pais, -frequencia), y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = reorder(pais, frequencia), y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Adiciona a coluna "regiao" ao data frame df_freq
df_freq$regiao <- countrycode(sourcevar = df_freq$pais, origin = "iso2c", destination = "region")
library(countrycode)
install.packages(countrycode)
install.packages('countrycode')
library(countrycode)
df_top20 <- rbind(df_top20, list(pais = "Outros", frequencia = sum(df_freq$frequencia[!(df_freq$pais %in% df_top20$pais)])))
# Adiciona a coluna "regiao" ao data frame df_freq
df_freq$regiao <- countrycode(sourcevar = df_freq$pais, origin = "iso2c", destination = "region")
# criar um plot de ggplot2 com barras de frequência
ggplot(df_top20, aes(x = reorder(pais, frequencia), y = frequencia, fill = pais)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(df_freq)
?countrycode
# Adiciona a coluna "regiao" ao data frame df_freq
df_freq$regiao <- countrycode(sourcevar = df_freq$pais, origin = "iso3c", destination = "region")
View(df_freq)
# Cria um vetor com os códigos ISO de cada país
codigos_iso <- countryname_to_countrycode(df_freq$pais, "pt")
?countryname_dict
?countrycode
# Traduz os nomes dos países para o inglês
nomes_paises_ingles <- translate(df_freq$pais, from = "pt", to = "en")
library(translateR)
install.packages('translateR')
library(translateR)
library(googleLanguageR)
install.packages('googleLanguageR')
library(googleLanguageR)
# Traduz os nomes dos países para o inglês usando a API do Google Translate
nomes_paises_ingles <- google_translate(text = df_freq$pais, target = "en")
# Traduz os nomes dos países para o inglês usando a API do Google Translate
nomes_paises_ingles <- gl_translate(text = df_freq$pais, target = "en")
?gl_translate
# Traduz os nomes dos países para o inglês usando a API do Google Translate
nomes_paises_ingles <- gl_translate(df_freq$pais, target = "en")
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
library(devtools)
#install_github('Juniorffonseca/r-pacote-valorant')
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(nnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(plotly)
library(pROC)
library(ROCR)
library(kableExtra)
library(valorant)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando partidas diarias e unindo em um df ------------------------------------------------------------
datas <- seq(as.Date('2023-04-11'), Sys.Date() - 1, by = 'day')
nomes_arquivos <- paste0('csv/previsao_diaria/', format(datas, '%Y-%m-%d'), '_acuracia.csv')
acuracia <- list()
for (arquivo in nomes_arquivos) {
acuracia[[arquivo]] <- possibly(read.csv2, otherwise = NULL)(arquivo)
}
acuracia <- bind_rows(acuracia) %>% select(-X)
acertos <- sum(acuracia$acertos)
erros <- sum(acuracia$erros)
print(acuracia_total <- acertos/(acertos+erros))
