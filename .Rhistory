data = split(historico, seq(1, nrow(historico), by = 10))
View(data)
data[1]
data[1[1]]
player[1,[1]]
player[1][1]
data[1][1]
data[1[1]]
data[1]$1
data[1$Player]
data$1
write.csv(data, 'teste')
data = split(historico, seq(0, nrow(historico), by = 10))
data = split(historico, seq(1, nrow(historico), by = 11))
?split
data = split(historico, seq(1, nrow(historico), by = 11), lex.order = T)
data = split(historico, seq(1, ncol(historico), by = 11))
View(data)
data = split(historico, seq(1, 10, by = 1))
data = split(historico, seq(historico, by = 1))
data = split(historico, seq(nrow(historico), by = 1))
data = split(historico, seq(nrow(historico)))
View(data)
?for
?for each
?foreach
?for
?for()
i <- 1
n <- 1
data <- list()
split(historico, 1, 10)
split(historico, seq(1, 10))
historico[1:10]
historico[1:10,]
m <- 10
while(i < 11767){
data[[length(data)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
View(data)
data[1]
data[2]
data[3]
data[4]
data[11765]
rm(mat)
rm(teste)
rm(data)
while(i < 11767){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
i <- 1
n <- 1
m <- 10
i <- 1
n <- 1
m <- 10
partidas <- list()
while(i < 11767){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
partidas[11766]
View(historico)
i <- 1
n <- 1
m <- 10
partidas <- list()
while(i = 11767){
while(i == 11767){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
while(i == 11767){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
while(i === 11767){
while(i < 11768){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
partidas[11768]
partidas[11767]
View(partidas)
View(historico)
i <- 1
n <- 1
m <- 10
partidas <- list()
while(i < 11767){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
partidas[11767]
partidas[11766]
i <- 1
n <- 1
m <- 10
partidas <- list()
while(i < 11768){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
partidas[11767]
View(historico)
write.csv2(historico, 'csv/historico.csv')
historico <- read.csv2('csv/historico.csv') %>% dplyr::select(-X)
i <- 1
n <- 1
m <- 10
partidas <- list()
while(i < 11768){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
historico <- read.csv2('csv/historico.csv') %>% dplyr::select(-X)
i <- 1
n <- 1
m <- 10
partidas <- list()
while(i < 11768){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
rm(historico)
rm(historico, i, m, n)
partidas[5]
partidas$Player
partida[,Player]
partidas[,Player]
partidas[,1]
partidas[is.element(partidas$Player, 'aspas'),]
partidas[is.element(partidas$Player, 'aspas'),,]
partidas[is.element(partidas$Player, 'aspas')]
partidas[partidas$Player %in% 'aspas',]
partidas[partidas$Player %in% 'aspas']
summarize(partidas)
partidas[[1]][[1]]
partidas[[1]]
partidas[[]][[]]
partidas[[]][[1]]
partidas[[,]][[1]]
partidas[[i]][[1]]
View(partidas)
historico <- read.csv2('csv/historico.csv') %>% dplyr::select(-X)
i <- 1
n <- 1
m <- 10
partidas <- list()
length(historico)
count(historico)
count(historico) / 10
(count(historico) / 10) + 1
while(i < (count(historico) / 10) + 1){
partidas[[length(partidas)+1]] <- historico[n: m,]
n = n + 10
m = m + 10
i = i + 1
}
View(partidas)
partidas[11767]
View(historico)
partidas[1][1]
partidas[1][[1]
]
partidas[[1]][[1]]
partidas[[1]][[1]] == snikk
partidas[[1]][[1]] == 'snikk'
select(partidas[[1]][[1]] == 'snikk')
partidas[[1]]$Player == 'snikk'
partidas[[1]]$Player
filter(partidas[[1]]$Player == 'xuss')
filter(partidas, partidas[[1]]$Player == 'xuss')
partidas[partidas[[1]]$Player == 'snikk']
testando <- partidas[partidas[[1]]$Player == 'snikk']
View(testando)
testando[1176]
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
testando <- partidas[partidas[[1]]$Player == 'aspas']
testando <- partidas[partidas[[1]]$Player == 'aspas',]
testando <- partidas[partidas[[1]]$Player == 'aspas']
partidas[partidas[[1]]$Player == 'aspas']
partidas[partidas[[1]]$Player == 'a']
partidas[[1]]
partidas[[1]]$Player == 'grubinho'
partidas[partidas[[1]]]$Player == 'grubinho'
partidas[partidas[[1]]$Player == 'grubinho']
testando <- partidas[[1]]$Player == 'grubinho'
testando <- partidas[partidas[[1]]$Player == 'grubinho']
View(testando)
testando[[2]]
testando <- partidas[partidas[[1]]$Team == 'loud']
testando <- partidas[partidas[[1]]$Team == 'Loud']
testando <- partidas[partidas[[1]]$Team == 'OPTC']
testando <- partidas[partidas[[1]]$Team == 'DSG']
rm(historico, i, m, n)
m <- 1
buscaJogador <- function(){
for(i in partidas){
testando <- partidas[partidas[[m]]$Player == 'grubinho']
m = m + 1
}
}
buscaJogador()
buscaJogador <- function(jogador){
for(i in partidas){
testando <- partidas[partidas[[m]]$Player == jogador]
m = m + 1
}
}
buscaJogador('grubinho')
buscaJogador <- function(jogador){
for(i in partidas[[]]){
testando <- partidas[partidas[[m]]$Player == jogador]
m = m + 1
}
}
buscaJogador('grubinho')
count(partidas)
length(partidas)
buscaJogador <- function(jogador){
while(i < length(partidas)){
testando <- partidas[partidas[[m]]$Player == jogador]
m = m + 1
}
}
buscaJogador('grubinho')
i <- 1
buscaJogador <- function(jogador){
while(i < length(partidas)){
testando <- partidas[partidas[[m]]$Player == jogador]
m = m + 1
}
}
buscaJogador('grubinho')
partidas[partidas[[1]]
]
partidas[partidas[[m]]$Player == 'teste']
partidas[[1]]$Player
partidas[[1]]$Player[1]
n <- 1
buscaJogador <- function(jogador){
while(i < length(partidas)){
testando <- partidas[partidas[[m]]$Player[n] == jogador]
m = m + 1
n = n + 1
}
}
buscaJogador('grubinho')
partidas[partidas[[m]]$Player[n] == 'teste']
partidas[partidas[[m]]$Player[n] == 'grubinho']
jogador <- 'grubinho'
partidas[partidas[[m]]$Player[n] == jogador]
while(i < length(partidas)){
testando <- partidas[partidas[[m]]$Player[n] == jogador]
m = m + 1
n = n + 1
}
View(testando)
testando <- list()
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
m = m + 1
n = n + 1
}
i <- 1
m <- 1
n <- 1
testando <- list()
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
m = m + 1
n = n + 1
}
View(testando)
testando <- list()
i <- 1
m <- 1
n <- 1
testando <- list()
partidas[[1]]$Player
partidas[[1]]$Player[1]
partidas[[2]]$Player[1]
partidas[[1]]$Player[10]
partidas[[1]]$Player[9]
partidas[[1]]$Player[11]
partidas[[1]]$Player[10]
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n = 10, n = 0)
m = m + 1
n = n + 1
}
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n = 0)
m = m + 1
n = n + 1
}
n = n
n
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n = 0, n = n)
m = m + 1
n = n + 1
}
?ifelse
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n <- 0, n = n)
m = m + 1
n = n + 1
}
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n = 0, n = n)
m = m + 1
n = n + 1
}
View(testando)
i <- 1
m <- 1
n <- 1
testando <- list()
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n = 0, n = n)
m = m + 1
n = n + 1
}
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n <- 0, n <- n)
m = m + 1
n = n + 1
}
i <- 1
m <- 1
n <- 1
testando <- list()
while(i < length(partidas)){
testando[[length(testando)+1]] <- partidas[partidas[[m]]$Player[n] == jogador]
ifelse(n == 10, n <- 0, n <- n)
m = m + 1
n = n + 1
}
View(testando)
i <- 1
m <- 1
n <- 1
testando <- list()
partidas[partidas[[m]]$Player[n] == jogador]
partidas[partidas[[m]]$Player[n] === jogador]
partidas[partidas[[m]]$Player[n] = jogador]
partidas[[m]]$Player[n] == jogador
partidas[[m]]$Player[n] == jogador
partidas[[m]]$Player[2] == jogador
partidas[[m]]$Player[n]
partidas[[m]][n]
partidas[[m]]
partidas[[m]][n]
partidas[[m]]$Player
partidas[[m]][n]
partidas[[m]][2]
partidas[[]][2]
partidas[][2]
partidas[][1]
partidas[][[1]
]
partidas[][[1]]
partidas[][[1,]]
partidas[1][[1]]
partidas[1,][[1]]
partidas[1][[1]][1]
partidas[1][[1]][2]
partidas[[1]][1]
partidas[[1]][2]
partidas[[1]][]
partidas[[1]][]
partidas[[1]][][1]
partidas[[1[1]]][]
partidas[[1]]
partidas[partidas[[1]]$,]
partidas[partidas[[1]]$]
partidas[[1]]$
partidas[[1]][2]
partidas[[1]][[1]]
partidas[[1]][[2]]
partidas[[1]][[3]]
View(partidas)
historico <- read.csv2('csv/historico.csv') %>% dplyr::select(-X)
View(historico)
historico[1]
historico[[1]
]
historico[1][1]
historico[[1]][[1]]
historico[[1]][[2]]
historico[[2]][[1]]
historico[1]
historico[1,]
partidas[[1]]
partidas[[1]][1]
partidas[[1]][1,]
partidas[[1]][2,]
while(i < length(partidas)){
if(partidas[[m]]$Player[n] == jogador)
testando[[length(testando)+1]] <- partidas[[m]][n,]
ifelse(n == 10, n <- 0, n <- n)
m = m + 1
n = n + 1
}
View(testando)
i <- 1
m <- 1
n <- 1
testando <- list()
while(i < length(partidas)){
if(partidas[[m]]$Player[n] == jogador)
testando[[length(testando)+1]] <- partidas[[m]][n,]
if(n == 10){n = 0}
m = m + 1
n = n + 1
}
testando
View(historico)
a <- na.omit(historico)
View(a)
View(a)
rm(a)
historico_sem_formatar <- read.csv2('csv/historico_sem_formatar.csv')
View(historico_sem_formatar)
dff <- historico_sem_formatar %>% map_df(as_tibble)
historico_sem_formatar <- dplyr::select(historico_sem_formatar, -X)
View(historico_sem_formatar)
View(historico_sem_formatar)
historico_sem_formatar
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
dff <- historico_sem_formatar %>% map_df(as_tibble)
?map_df
as_tibble
?as_tibble
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
dff <- t(historico_sem_formatar)
View(dff)
dff2 <- dff %>% map_df(as_tibble)
View(dff2)
