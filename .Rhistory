funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
funcaoPagina(pagina)
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
funcaoPagina('https://www.vlr.gg/matches')
a <- funcaoPagina('https://www.vlr.gg/matches')
a
a[1]
a[2]
a[3]
a[4]
date()
data <- date()
data
Sys.Date()
m <- 1
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
a <- funcaoPagina('https://www.vlr.gg/matches')
m <- 1
dff <- list()
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert')
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert')
View(diario)
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text()
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T)
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date()
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date.character()
?as.Date
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date.character(.[1])
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date.character(.[1]) %>% .[1]
diario <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date(.[1]) %>% .[1]
diarioz <- read_html(a[1]) %>% html_nodes('div.moment-tz-convert') %>% html_text(trim=T) %>% as.Date(.[1]) %>% .[1]
Sys.Date()
diario == Sys.Date()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
}}
else{}
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
}}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
diario <- 0
diario == Sys.Date()
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
View(dff)
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m], resultado = T)
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
#diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
diario <- read_html(a[3]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
x <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
a[4]
x <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
x <- as.Date()
x <- as.Date(x)
x <- as.Date(x[1])
x <- as.Date.character(x[1])
x <- as.Date(x[1])
x
x[1]
as.Date(x[1])
x <- x[1]
as.Date(x)
typeof(x)
as.Date(x, '%d/%m%d')
as.Date(x, '%d/%m')
as.Date(x, '%d/%m/%d')
as.Date.character(x, '%d/%m/%d')
as.Date.character(x, '%m/%d')
x <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
x <- read_html(a[1]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
as.Date(x)
as.Date(x[1])
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
z <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.Date(.[1]) %>% .[1]
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% as.numeric()
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T)
diario <- read_html(a[4]) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1]
as.Date(diario)
day(Sys.Date)
diario
as.Date(diario, format = "%A, %B %d%t%*o")
as.Date("Sunday, February 19th", format = "%A, %B %d%t%*o")
Sys.getlocale()
as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada
Sys.getlocale()
Sys.setlocale("LC_TIME", "pt_BR")
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada
library(lubridate)
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %dº", locale = "pt_BR")
data_formatada
data_formatada <- mdy("Sunday, February 19th")
data_formatada
data_formatada <- as.Date("Sunday, February 19th", format = "%A, %B %d%{st|nd|rd|th}")
data_formatada
data_formatada <- parse_date_time("Sunday, February 19th", orders = c("wdy, mdy", "B d, y"))
date_str <- "Sunday, February 19th"
date_str <- gsub("(th|nd|rd|st)", "", date_str) # remover sufixos de dia
as.Date(date_str, "%A, %B %d")
date_str <- "Sunday, February 19th"
parse_date_time(date_str, orders = "%A, %B %d", locale = "en_US")
m <- 1
dff <- list()
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
#diario <- 0
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
dff <- dff %>% map_df(as_tibble)
Sys.Date()
nome_arquivo <- paste(Sys.Date(), '_urls', sep = '')
write.csv2(a, nome_arquivo)
nome_arquivo <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(a, nome_arquivo)
nome_arquivo <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(a, paste('csv/', nome_arquivo, sep = ''))
write.csv2(a, paste('csv/catalogacao_diaria', nome_arquivo, sep = ''))
nome_arquivo <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(a, paste('csv/catalogacao_diaria', nome_arquivo, sep = ''))
write.csv2(a, paste('csv/catalogacao_diaria/', nome_arquivo, sep = ''))
nome_arquivo_partidas <- paste(Sys.Date(), '_partidas.csv', sep = '')
write.csv2(a, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b
n <- 1
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
rm(b)
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b <- ''
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b <- b[0]
b <- '' %>% [0]
b <- '' %>% .[0]
rm(b)
b <- '' %>% .[0]
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(diario == Sys.Date()){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
b
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(b, paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = ''))
nome_arquivo_partidas <- paste(Sys.Date(), '_partidas.csv', sep = '')
write.csv2(dff, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
Sys.time()
Sys.date()
Sys.Date()
Sys.Date() + 1
Sys.Date() + 2
library(taskscheduleR)
install.packages(taskscheduleR)
install.packages('taskscheduleR')
library(taskscheduleR)
# Define a tarefa
catalogacao_diaria <- taskscheduler_create(taskname = 'Catalogar partidas diariamente',
rscript = "C:/Users/anonb/Documents/TCC Pós/Scripts/catalogacao_diaria.R",
schedule = "DAILY",
starttime = "00:00")
library(taskscheduleR)
# Define a tarefa
catalogacao_diaria <- taskscheduler_create(taskname = 'Catalogar_partidas_diariamente',
rscript = "C:/Users/anonb/Documents/TCC_Pós/Scripts/catalogacao_diaria.R",
schedule = "DAILY",
starttime = "00:00")
# Agendar a tarefa
taskscheduler_add(catalogacao_diaria)
install.packages("taskscheduleR")
library(taskscheduleR)
# Agendar a tarefa
taskscheduler_add(catalogacao_diaria)
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
setwd("C:/Users/anonb/Documents/TCC_Pós/Scripts")
setwd("C:/Users/anonb/Documents/TCC_Pós/Scripts")
taskscheduleR:::taskschedulerAddin()
setwd("C:/Users/anonb/Documents/TCC_Pós/Scripts")
setwd("C:/Users/anonb/Documents/TCC_Pós/Scripts")
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
i <- 'https://www.vlr.gg/164084/tbd-challengers-league-dach-evolution-split-1-ubsf'
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
dia <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
rm(diario)
tbd <- read_html(i) %>% html_nodes('table') %>% html_table()
View(tbd)
View(tbd)
tbd
tbd %>% map_df(as_tibble)
tbd %>% map_df(as_tibble, .name_repair = 'minimal')
tbd[1]
tbd[2]
tbd[1:2]
tbd <- tbd[1:2] %>% map_df(as_tibble, .name_repair = 'minimal')
tbd <- read_html(i) %>% html_nodes('table') %>% html_table() %>%
.[1:2] %>% map_df(as_tibble, .name_repair = 'minimal')
tbd[1]
tbd[1] == 'TBD'
trues <- tbd[1] == 'TBD'
trues > 5
trues == 10
trues[1]
trues[1:10]
trues
trues == TRUE
trues == FALSE
sum(trues)
sum(tbd[1] == 'TBD')
sum(tbd[1]=='TBD') <= 2
sum(tbd[1]=='TBD') >= 2
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
a <- funcaoPagina('https://www.vlr.gg/matches')
n <- 1
b <- '' %>% .[0]
for (i in a){
tryCatch({
diario <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
tbd <- read_html(i) %>% html_nodes('table') %>% html_table() %>%
.[1:2] %>% map_df(as_tibble, .name_repair = 'minimal')
trues <- tbd[1] == 'TBD'
if(diario == Sys.Date() & sum(tbd[1] == 'TBD') <= 2){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(b, paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = ''))
m <- 1
dff <- list()
for (i in a){
tryCatch({
dia <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
if(dia == Sys.Date()){
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
for (i in b){
tryCatch({
dff[[length(dff)+1]] <- medias_Times(a[m])
m = m + 1
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
m <- 1
dff <- list()
for (i in b){
tryCatch({
dff[[length(dff)+1]] <- medias_Times(b[m])
m = m + 1
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
dff <- dff %>% map_df(as_tibble)
nome_arquivo_partidas <- paste(Sys.Date(), '_partidas.csv', sep = '')
write.csv2(dff, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
taskscheduleR:::taskschedulerAddin()
