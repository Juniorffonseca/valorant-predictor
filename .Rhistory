achar_Seed(s, hidden_n, t = 0.5, mostrar_i = F)
s <- s + 1
w <<- ifelse(i>w, w <<- i, w <<- w)
print(round(w, 2))
}
while ( i < 0.70) {
achar_Seed(s, hidden_n, t = 0.5, mostrar_i = F)
s <- s + 1
w <<- ifelse(i>w, w <<- i, w <<- w)
print(round(w, 2))
}
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando arquivos csv ---------------------------------------------------------------------------------
nome_arquivo_urls <- paste(Sys.Date() - 1, '_urls.csv', sep = '')
nome_arquivo_previsoes <- paste(Sys.Date() - 1, '_previsoes.csv', sep = '')
nome_arquivo_acuracia <- paste(Sys.Date() - 1, '_acuracia.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X) %>% unlist()
previsoes <- read.csv2(paste('csv/previsao_diaria/', nome_arquivo_previsoes, sep = '')) %>% select(-X)
ganhador <- '' %>% .[0]
for (i in b){
tryCatch({
ganhador[length(ganhador)+1] <- get_Ganhadores(i)
}, error = function(e) {
# caso ocorra um erro, imprimir mensagem de erro e continuar o loop
cat("Erro ao checar a URL", url, ":", conditionMessage(e), "\n")
return(NULL)
})
}
df <- cbind(b, previsoes)
df$ganhador <- ganhador
df <- df[!df$ganhador %in% "empate", ]
df$V1_n <- as.numeric(ifelse(is.na(str_extract(df$V1, "\\d{1,2}[.,]\\d{1,2}")),
str_extract(df$V1, "\\d{1,2}"),
str_extract(df$V1, "\\d{1,2}[.,]\\d{1,2}")))
df$V2_n <- as.numeric(ifelse(is.na(str_extract(df$V2, "\\d{1,2}[.,]\\d{1,2}")),
str_extract(df$V2, "\\d{1,2}"),
str_extract(df$V2, "\\d{1,2}[.,]\\d{1,2}")))
df$prev <- ifelse(as.numeric(df$V1_n)>as.numeric(df$V2_n), 1, 0)
row.names(df) <- NULL
acertos <- sum(df$ganhador == df$prev)
erros <- sum(df$ganhador != df$prev)
acuracia <- acertos/nrow(df)
acuracia_diaria <- as.data.frame(cbind(acertos, erros, acuracia))
write.csv2(df, paste('csv/previsao_diaria/', nome_arquivo_previsoes, sep = ''))
write.csv2(acuracia_diaria, paste('csv/previsao_diaria/', nome_arquivo_acuracia, sep = ''))
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
remotes::install_github('Juniorffonseca/r-pacote-valorant')
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(valorant)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
load(file = 'rede_neural_10_04_2023.rda')
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
nome_arquivo_previsoes <- paste(Sys.Date(), '_previsoes.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X) %>% unlist()
previsoes <- matrix(nrow = 0, ncol = 2)
for (url in b){
# prever as variáveis
tryCatch({
prev <- prever(url)
# criar matriz temporária com duas colunas para armazenar as previsões
temp <- matrix(0, nrow = 1, ncol = 2)
temp[1, ] <- prev
# adicionar as previsões à matriz
previsoes <- rbind(previsoes, temp)
}, error = function(e) {
# caso ocorra um erro, imprimir mensagem de erro e continuar o loop
cat("Erro ao prever a URL", url, ":", conditionMessage(e), "\n")
})
}
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando arquivos csv ---------------------------------------------------------------------------------
nome_arquivo_urls <- paste(Sys.Date() - 1, '_urls.csv', sep = '')
nome_arquivo_partidas <- paste(Sys.Date() - 1, '_partidas.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X)
dff <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = '')) %>% select(-X)
ganhador <- '' %>% .[0]
for (i in b[,]){
ganhador[length(ganhador)+1] <- get_Ganhadores(i)
}
dff$ganhador <- ganhador
dff <- dff[!dff$ganhador %in% "empate", ]
b <- b[as.numeric(rownames(dff)),]
rownames(dff) <- NULL
rownames(b) <- NULL
write.csv2(dff, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
write.csv2(b, paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = ''))
View(dff)
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando arquivos csv ---------------------------------------------------------------------------------
nome_arquivo_urls <- paste(Sys.Date() - 1, '_urls.csv', sep = '')
nome_arquivo_partidas <- paste(Sys.Date() - 1, '_partidas.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X)
dff <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = '')) %>% select(-X)
ganhador <- '' %>% .[0]
for (i in b[,]){
ganhador[length(ganhador)+1] <- get_Ganhadores(i)
}
dff$ganhador <- ganhador
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando arquivos csv ---------------------------------------------------------------------------------
nome_arquivo_urls <- paste(Sys.Date() - 1, '_urls.csv', sep = '')
nome_arquivo_partidas <- paste(Sys.Date() - 1, '_partidas.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X)
dff <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = '')) %>% select(-X)
ganhador <- '' %>% .[0]
for (i in b[,]){
ganhador[length(ganhador)+1] <- get_Ganhadores(i)
}
dff$ganhador <- ganhador
taskscheduleR:::taskschedulerAddin()
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
a <- funcaoPagina('https://www.vlr.gg/matches')
n <- 1
b <- '' %>% .[0]
for (i in a){
tryCatch({
dia <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
tbd <- read_html(i) %>% html_nodes('table') %>% html_table() %>%
.[1:2] %>% map_df(as_tibble, .name_repair = 'minimal')
if(dia == Sys.Date() && !grepl('TBD', tbd[,1])){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
funcaoPagina <- function(pagina){
matchs <- read_html(pagina) %>%
html_nodes('a') %>% html_attr('href')
matchs <- matchs[15:64]
n <- 1
for (i in matchs){
matchs[n] <- paste('https://www.vlr.gg', matchs[n], sep = '')
n = n + 1
}
return(matchs)
}
a <- funcaoPagina('https://www.vlr.gg/matches')
n <- 1
b <- '' %>% .[0]
for (i in a){
tryCatch({
dia <- read_html(i) %>%
html_nodes('div.moment-tz-convert') %>% html_text(trim = T) %>% .[1] %>%
parse_date_time(., orders = "%A, %B %d", locale = "en_US")
tbd <- read_html(i) %>% html_nodes('table') %>% html_table() %>%
.[1:2] %>% map_df(as_tibble, .name_repair = 'minimal')
if(dia == Sys.Date() && !grepl('TBD', tbd[,1])){
b[length(b)+1] <- i
}
else{}
}
, error = function(e){cat('error:', conditionMessage(e), '\n')})
}
dff <- list()
c <- c()
for (i in seq_along(b)) {
res <- medias_Times(b[i])
if (is.null(res)) {
cat('erro no link:', b[i], '\n')
} else {
c <- c(c, b[i])
dff[[length(dff)+1]] <- res
}
}
dff <- dff %>% map_df(as_tibble)
nome_arquivo_partidas <- paste(Sys.Date(), '_partidas.csv', sep = '')
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
write.csv2(dff, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
write.csv2(c, paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = ''))
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando arquivos csv ---------------------------------------------------------------------------------
nome_arquivo_urls <- paste(Sys.Date() - 1, '_urls.csv', sep = '')
nome_arquivo_partidas <- paste(Sys.Date() - 1, '_partidas.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X)
dff <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = '')) %>% select(-X)
ganhador <- '' %>% .[0]
for (i in b[,]){
ganhador[length(ganhador)+1] <- get_Ganhadores(i)
}
dff$ganhador <- ganhador
dff <- dff[!dff$ganhador %in% "empate", ]
b <- b[as.numeric(rownames(dff)),]
rownames(dff) <- NULL
rownames(b) <- NULL
write.csv2(dff, paste('csv/catalogacao_diaria/', nome_arquivo_partidas, sep = ''))
write.csv2(b, paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = ''))
# Carregando pacotes --------------------------------------------------------------------------------------
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(reshape2)
library(tidyverse)
library(neuralnet)
library(readr)
library(purrr)
library(valorant)
library(lubridate)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando arquivos csv ---------------------------------------------------------------------------------
nome_arquivo_urls <- paste(Sys.Date() - 1, '_urls.csv', sep = '')
nome_arquivo_previsoes <- paste(Sys.Date() - 1, '_previsoes.csv', sep = '')
nome_arquivo_acuracia <- paste(Sys.Date() - 1, '_acuracia.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X) %>% unlist()
previsoes <- read.csv2(paste('csv/previsao_diaria/', nome_arquivo_previsoes, sep = '')) %>% select(-X)
ganhador <- '' %>% .[0]
for (i in b){
tryCatch({
ganhador[length(ganhador)+1] <- get_Ganhadores(i)
}, error = function(e) {
# caso ocorra um erro, imprimir mensagem de erro e continuar o loop
cat("Erro ao checar a URL", url, ":", conditionMessage(e), "\n")
return(NULL)
})
}
df <- cbind(b, previsoes)
df$ganhador <- ganhador
df <- df[!df$ganhador %in% "empate", ]
df$V1_n <- as.numeric(ifelse(is.na(str_extract(df$V1, "\\d{1,2}[.,]\\d{1,2}")),
str_extract(df$V1, "\\d{1,2}"),
str_extract(df$V1, "\\d{1,2}[.,]\\d{1,2}")))
df$V2_n <- as.numeric(ifelse(is.na(str_extract(df$V2, "\\d{1,2}[.,]\\d{1,2}")),
str_extract(df$V2, "\\d{1,2}"),
str_extract(df$V2, "\\d{1,2}[.,]\\d{1,2}")))
df$prev <- ifelse(as.numeric(df$V1_n)>as.numeric(df$V2_n), 1, 0)
row.names(df) <- NULL
acertos <- sum(df$ganhador == df$prev)
erros <- sum(df$ganhador != df$prev)
acuracia <- acertos/nrow(df)
acuracia_diaria <- as.data.frame(cbind(acertos, erros, acuracia))
write.csv2(df, paste('csv/previsao_diaria/', nome_arquivo_previsoes, sep = ''))
write.csv2(acuracia_diaria, paste('csv/previsao_diaria/', nome_arquivo_acuracia, sep = ''))
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
library(devtools)
#install_github('Juniorffonseca/r-pacote-valorant')
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(nnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(plotly)
library(pROC)
library(ROCR)
library(kableExtra)
library(valorant)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando partidas diarias e unindo em um df ------------------------------------------------------------
datas <- seq(as.Date('2023-04-13'), Sys.Date() - 1, by = 'day')
nomes_arquivos <- paste0('csv/previsao_diaria/', format(datas, '%Y-%m-%d'), '_acuracia.csv')
acuracia <- list()
for (arquivo in nomes_arquivos) {
acuracia[[arquivo]] <- possibly(read.csv2, otherwise = NULL)(arquivo)
}
acuracia <- bind_rows(acuracia) %>% select(-X)
acertos <- sum(acuracia$acertos)
erros <- sum(acuracia$erros)
print(acuracia_total <- acertos/(acertos+erros))
acuracia_total_df <- as.data.frame(cbind(acuracia_total, acertos, erros))
write.csv2(acuracia_total_df, 'csv/acuracia_total.csv')
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
remotes::install_github('Juniorffonseca/r-pacote-valorant')
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(valorant)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
load(file = 'rede_neural_10_04_2023.rda')
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
nome_arquivo_previsoes <- paste(Sys.Date(), '_previsoes.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X) %>% unlist()
previsoes <- matrix(nrow = 0, ncol = 2)
for (url in b){
# prever as variáveis
tryCatch({
prev <- prever(url)
# criar matriz temporária com duas colunas para armazenar as previsões
temp <- matrix(0, nrow = 1, ncol = 2)
temp[1, ] <- prev
# adicionar as previsões à matriz
previsoes <- rbind(previsoes, temp)
}, error = function(e) {
# caso ocorra um erro, imprimir mensagem de erro e continuar o loop
cat("Erro ao prever a URL", url, ":", conditionMessage(e), "\n")
})
}
write.csv2(previsoes, paste('csv/previsao_diaria/', nome_arquivo_previsoes, sep = ''))
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
remotes::install_github('Juniorffonseca/r-pacote-valorant')
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(valorant)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
load(file = 'rede_neural_10_04_2023.rda')
nome_arquivo_urls <- paste(Sys.Date(), '_urls.csv', sep = '')
nome_arquivo_previsoes <- paste(Sys.Date(), '_previsoes.csv', sep = '')
b <- read.csv2(paste('csv/catalogacao_diaria/', nome_arquivo_urls, sep = '')) %>% select(-X) %>% unlist()
previsoes <- matrix(nrow = 0, ncol = 2)
for (url in b){
# prever as variáveis
tryCatch({
prev <- prever(url)
# criar matriz temporária com duas colunas para armazenar as previsões
temp <- matrix(0, nrow = 1, ncol = 2)
temp[1, ] <- prev
# adicionar as previsões à matriz
previsoes <- rbind(previsoes, temp)
}, error = function(e) {
# caso ocorra um erro, imprimir mensagem de erro e continuar o loop
cat("Erro ao prever a URL", url, ":", conditionMessage(e), "\n")
})
}
write.csv2(previsoes, paste('csv/previsao_diaria/', nome_arquivo_previsoes, sep = ''))
# Instalando pacotes (se necessário) e carregando ----------------------------------------------------------
library(devtools)
#install_github('Juniorffonseca/r-pacote-valorant')
library(caret)
library(dplyr)
library(tidyr)
library(rvest)
library(rsample)
library(readr)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(nnet)
library(caret)
library(ggplot2)
library(ModelMetrics)
library(beepr)
library(purrr)
library(plotly)
library(pROC)
library(ROCR)
library(kableExtra)
library(valorant)
setwd('C:/Users/anonb/Documents/TCC_Pós/Scripts')
# Carregando partidas diarias e unindo em um df ------------------------------------------------------------
datas <- seq(as.Date('2023-04-13'), Sys.Date() - 1, by = 'day')
nomes_arquivos <- paste0('csv/previsao_diaria/', format(datas, '%Y-%m-%d'), '_acuracia.csv')
acuracia <- list()
for (arquivo in nomes_arquivos) {
acuracia[[arquivo]] <- possibly(read.csv2, otherwise = NULL)(arquivo)
}
acuracia <- bind_rows(acuracia) %>% select(-X)
acertos <- sum(acuracia$acertos)
erros <- sum(acuracia$erros)
print(acuracia_total <- acertos/(acertos+erros))
acuracia_total_df <- as.data.frame(cbind(acuracia_total, acertos, erros))
write.csv2(acuracia_total_df, 'csv/acuracia_total.csv')
